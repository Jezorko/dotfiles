#!/usr/bin/fish

# Dependencies list:
#  * colors-git - https://aur.archlinux.org/packages/colors-git/ and http://blog.z3bra.org/2015/06/vomiting-colors.html
#  * nitrogen - https://wiki.archlinux.org/index.php/nitrogen
1;9u
if not count $argv > /dev/null
    echo "Usage $_ [Image file.png] [Colors generator] [Wallpaper size option]"
    exit 1
end

# First argument must always be an image file
set image_file "$argv[1]"

# Colors amount to generate
set colors_amount 16

# Generates color palette and saves it as array
if test "$argv[2]"
    set generated_palette (eval "$argv[2]")
else
    set generated_palette (colors -en $colors_amount < $image_file)
end

# Checks if palette was correctly generated
set generated_amount (count $generated_palette)
if test $colors_amount != $generated_amount
    notify-send -u critical "Wallpaper changing error" "Not enough colors could be generated\n$image_file"
    exit 1
end

# Sets image file as a wallpaper
if test "$argv[3]"
    nitrogen --save "$argv[3]" "$image_file"
else
    nitrogen --save --set-zoom-fill "$image_file"
end

# Transparency factor
set -l transparency "e1"

for x in (seq $colors_amount)
    # Unsets environment variables
    set -e "GENERATED_PALETTE_$x"
    set -e "GENERATED_PALETTE_T_$x"

    set -l transparent_generated (echo "$generated_palette[$x]" | cut -c 2- | awk "{print \"#$transparency\"\$1}")

    # Saves generated palette to environment variables
    set -Ux "GENERATED_PALETTE_$x" $generated_palette[$x]
    set -Ux "GENERATED_PALETTE_T_$x" $transparent_generated

    # Saves generated palette to Xresources
    echo "*generated$x: $generated_palette[$x]" | xrdb -merge
    echo "*generated.transparent$x: $transparent_generated" | xrdb -merge
end

# Dumps resources to file
xrdb -edit ~/.Xresources

# Sets fish colors
set_generated_colors.fish

# Reloads dunst
killall dunst
dunst \
    -cf $GENERATED_PALETTE_1  \
    -cb $GENERATED_PALETTE_15 \
    -nf $GENERATED_PALETTE_10  \
    -nb $GENERATED_PALETTE_1  \
    -lf $GENERATED_PALETTE_7  \
    -lb $GENERATED_PALETTE_1  &

# Generates rofi theme and saves it to Xresources
echo "rofi.color-enabled: true" | xrdb -merge
#                        background              frame
echo "rofi.color-window: $GENERATED_PALETTE_T_2, #00000000, #00000000" | xrdb -merge
#                        backgroun1 foreground             backgroun2 selected background      selected foreground
echo "rofi.color-normal: #00000000, $GENERATED_PALETTE_12, #00000000, $GENERATED_PALETTE_T_13, $GENERATED_PALETTE_3" | xrdb -merge
echo "rofi.color-active: $GENERATED_PALETTE_T_3, $GENERATED_PALETTE_13, $GENERATED_PALETTE_T_3, $GENERATED_PALETTE_15, $GENERATED_PALETTE_3" | xrdb -merge
echo "rofi.color-urgent: #88ff0000, $GENERATED_PALETTE_6, #88ff0000, $GENERATED_PALETTE_6, $GENERATED_PALETTE_7" | xrdb -merge
echo "rofi.padding: 2" | xrdb -merge
echo "rofi.separator-style: solid" | xrdb -merge
echo "rofi.separatorcolor: $GENERATED_PALETTE_2" | xrdb -merge
echo "rofi.width: 65" | xrdb -merge
echo "rofi.font: Droid Sans Mono 12" | xrdb -merge
echo "rofi.location: 6" | xrdb -merge # middle bottom
echo "rofi.bw: 3" | xrdb -merge
echo "rofi.hide-scrollbar: true" | xrdb -merge

# Restarts i3
i3-msg reload
polybar-msg cmd restart

notify-send "Wallpaper changed" "$image_file"
