#!/bin/bash
# Displays an interactive menu for wallpaper selection.

source "$(dirname "$(realpath "${0}")")/utils/logging.bash"
source "$(dirname "$(realpath "${0}")")/utils/baseutils.bash"

# Check for required dependencies
dependencyExists 'dmenu_generated'

# Directory where wallpapers are stored.
# May be set up externally in .profile or similar file.
WALLPAPERS_DIRECTORY="${WALLPAPERS_DIRECTORY:=${HOME}/Pictures/Wallpapers}"

if [[ ! -d "${WALLPAPERS_DIRECTORY}" ]]; then
  echoError 'misconfigured wallpapers directory'
  echoError "'${WALLPAPERS_DIRECTORY}' does not exist or is not accessible"
  echoError 'please set correct dirrectory by setting the WALLPAPERS_DIRECTORY environment variable'
  exit 1
fi

cd "${WALLPAPERS_DIRECTORY}"

wallpaper="$(ls | grep ".png" | dmenu_generated "Wallpaper: ")"

if [[ "${wallpaper}" == '' ]]; then
  echoError 'no wallpaper selected, aborting'
  exit 1
fi

echoInfo "selected wallpaper file ${wallpaper}"

# Different methods of theme generation for convenience
# $image_file is the file colors should be generated from
# $colors_amount variable can be used to determine how many colors must be generated
method="$(echo -e 'colors -en $colors_amount < $image_file       # default
colors -en 32 < "$image_file" | sed "9,24p;d" # pastel lower contrast
colors -en 22 < "$image_file" | sed "4,19p;d" # pastel higher contrast
colors -n 50 < "$image_file" | cutl 4 12      # pastel brighter
colors -n 50 < "$image_file" | cutl 6 10      # pastel toned
colors -n 50 < "$image_file" | cutl 8 8       # pastel darker
colors -en 32 < "$image_file" | awk "NR%2==0" # toned brighter
colors -en 32 < "$image_file" | awk "NR%2==1" # toned darker' | dmenu_generated 'Setting method: ')"

if [[ "${method}" == '' ]]; then
  echoWarn 'no method selected, using default'
  method='colors -en $colors_amount < $image_file'
fi

export sizeSetting="$(echo -e '--set-auto
--set-centered
--set-scaled
--set-tiled
--set-zoom
--set-zoom-fill' | dmenu_generated 'Size setting: ')"

if [[ "${sizeSetting}" == '' ]]; then
  echoWarn 'no size setting selected, using default'
  sizeSetting='--set-auto'
fi

set_wallpaper "$wallpaper" "$method" "$sizeSetting"
